local player = game:GetService("Players")
local DataStore = game:GetService("DataStoreService")
local StoredData = DataStore:GetDataStore("Data")

local function CreateData() -- this function is called if no data was found. You can always improve on it and change values
	local Data = {
		XP = 0,
		Strength = 5
	}
	return Data
end

player.PlayerAdded:Connect(function(plr)
	local ID = plr.UserId --User ID is unique to every player btw
	local Data
	
	task.wait(3) --waits a couple second to not use the old saved data if the player crashes or disconnects and rejoins too fast 
	
	local Success, FetchedData = pcall(function() -- Checks if any Data can be found
		return StoredData:GetAsync(ID)
	end)

	if Success and FetchedData ~= nil then -- Makes sure it doesnt crash if no fetched data was given but was successful
		Data = FetchedData
		print("Successfully Loaded")

		-- optional for debugging :D
		--print(FetchedData.XP, FetchedData.Strength)
	end

	if not Success or FetchedData == nil then
		Data = CreateData() -- to change, follow this : (name in line 15) = CreateData()
		warn("No Data Fetched from ".. plr.Name .. " Creating new one")
	end

	local Folder = Instance.new("Folder",plr) -- To change, just follow this : local (name) = instance.New("Folder",plr)
	Folder.Name = "Stats" -- change to what fits
	local XPCount = Instance.new("IntValue",Folder) -- To change, just follow this : local (name) = instance.New("IntValue",(name in line 31))
	XPCount.Name = "XPCount" --Change to what fits 
	XPCount.Value = Data.XP -- to change, follow this : (name in line 34).Value = Data.(Name of the value you're trying to change)

	local StrCount = Instance.new("IntValue",Folder) -- To change, just follow this : local (name) = instance.New("IntValue",(name in line 31))
	StrCount.Name = "StrCount"  --Change to what fits
	StrCount.Value = Data.Strength -- to change, follow this : (name in line 34).Value = Data.(Name of the value you're trying to change)

	
		

	while plr and plr.Parent ~= nil do
		task.wait(1) -- always makes sure data is updated but you can lower the value to your liking
		Data.XP = XPCount.Value
		Data.Strength = StrCount.Value

		task.wait(60)
		if plr and plr.Parent ~= nil then -- Double check if the player still exists
			local success, errr = pcall(function() 
				StoredData:UpdateAsync(ID, function()
					return Data
				end)
			end)
			if success then 
				print("Autosaved!")
			else
				warn("Couldn't save")
			end
		else
			warn("They're....Gone...")
			break
		end
	end
end)

player.PlayerRemoving:Connect(function(plr)
	local ID = plr.UserId
	local ParentFolder = plr:FindFirstChild("Stats") -- put the name given to the Folder in line 32 inside the () 
	local XP = ParentFolder:FindFirstChild("XPCount") -- put the name given to the Folder in line 34 inside the () 
	local Str = ParentFolder:FindFirstChild("StrCount") -- put the name given to the Folder in line 38 inside the () 

	if XP ~= nil and Str ~= nil then 
		local Data = {
			XP = XP.Value,
			Strength = Str.Value
		}
			-- just copy the data format to here in line 6 if you changed anything


		local success,errr = pcall(function() 
			StoredData:UpdateAsync(ID, function()
				return Data
			end)
		end)

		if success then 
			print("Successfully saved")
		else
			warn("Couldn't save")
		end

	end
end)
